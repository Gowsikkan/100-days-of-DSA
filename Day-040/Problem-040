

# Definition for singly-linked list.
class ListNode:
     def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def reverseList(self, head):
        prev =None
        curr= head
        while curr:
            next=curr.next
            curr.next=prev
            prev=curr
            curr=next
        return prev            


if __name__ == '__main__':
 
    #Start with the empty list
    llist = Solution()
 
    llist.head = ListNode(1)
    llist.head.next = ListNode(2)
    llist.head.next.next = ListNode(3)
    llist.head.next.next.next = ListNode(4)
    

c=Solution().reverseList(llist.head)
print(c.val,c.next.val,c.next.next.val,c.next.next.next.val)